openapi: 3.0.1
info:
  title: Movie Explorer+ API
  version: v1
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token required for authenticated endpoints (supervisor/admin roles for create/update/delete movies)
paths:
  /api/v1/signup:
    post:
      summary: Signup user
      tags:
        - Users
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  example: Akshay
                last_name:
                  type: string
                  example: Katoch
                email:
                  type: string
                  example: akshaykatoch38@gmail.com
                password:
                  type: string
                  example: Password123
                mobile_number:
                  type: string
                  example: "9876543210"
                role:
                  type: string
                  enum: [user, supervisor, admin]
                  example: user
              required:
                - first_name
                - last_name
                - email
                - password
                - mobile_number
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Signup successful"
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiJ9..."
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      first_name:
                        type: string
                        example: Akshay
                      last_name:
                        type: string
                        example: Katoch
                      email:
                        type: string
                        example: akshaykatoch38@gmail.com
                      mobile_number:
                        type: string
                        example: "9876543210"
                      role:
                        type: string
                        example: user
                        enum: [user, supervisor]
        '422':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example: ["Email has already been taken", "Password is too short (minimum is 6 characters)"]
  /api/v1/login:
    post:
      summary: Login user
      tags:
        - Users
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: akshaykatoch38@gmail.com
                password:
                  type: string
                  example: Password123
              required:
                - email
                - password
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiJ9..."
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: "Akshay Katoch"
                      email:
                        type: string
                        example: akshaykatoch38@gmail.com
                      role:
                        type: string
                        example: user
                        enum: [user, supervisor]
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid email or password"
  /api/v1/movies:
    get:
      summary: List movies
      tags:
        - Movies
      parameters:
        - name: search
          in: query
          required: false
          schema:
            type: string
          description: Search by title or description
        - name: genre
          in: query
          required: false
          schema:
            type: string
          description: Filter by genre
        - name: plan
          in: query
          required: false
          schema:
            type: string
            enum: [basic, gold, platinum]
          description: Filter by plan
        - name: page
          in: query
          required: false
          schema:
            type: integer
          description: Page number for pagination
      responses:
        '200':
          description: Movies retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  movies:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        title:
                          type: string
                        genre:
                          type: string
                        release_year:
                          type: integer
                        rating:
                          type: number
                        plan:
                          type: string
                          enum: [basic, gold, platinum]
                        poster_url:
                          type: string
                          nullable: true
                        banner_url:
                          type: string
                          nullable: true
                  total_pages:
                    type: integer
                  current_page:
                    type: integer
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    post:
      summary: Create a movie
      tags:
        - Movies
      security:
        - BearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Inception
                genre:
                  type: string
                  example: Sci-Fi
                release_year:
                  type: integer
                  example: 2010
                rating:
                  type: number
                  example: 8.8
                director:
                  type: string
                  example: Christopher Nolan
                duration:
                  type: integer
                  example: 148
                description:
                  type: string
                  example: A thief who steals corporate secrets through dream infiltration.
                plan:
                  type: string
                  enum: [basic, gold, platinum]
                  example: platinum
                poster:
                  type: string
                  format: binary
                  description: Poster image file
                banner:
                  type: string
                  format: binary
                  description: Banner image file
              required:
                - title
                - genre
                - release_year
                - rating
                - plan
      responses:
        '201':
          description: Movie created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  genre:
                    type: string
                  release_year:
                    type: integer
                  rating:
                    type: number
                  director:
                    type: string
                  duration:
                    type: integer
                  description:
                    type: string
                  plan:
                    type: string
                    enum: [basic, gold, platinum]
                  poster_url:
                    type: string
                    nullable: true
                  banner_url:
                    type: string
                    nullable: true
        '403':
          description: Forbidden (requires supervisor or admin role)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '422':
          description: Validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: array
                    items:
                      type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /api/v1/movies/{id}:
    get:
      summary: Show a movie
      tags:
        - Movies
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Movie retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  genre:
                    type: string
                  release_year:
                    type: integer
                  rating:
                    type: number
                  director:
                    type: string
                  duration:
                    type: integer
                  description:
                    type: string
                  plan:
                    type: string
                    enum: [basic, gold, platinum]
                  poster_url:
                    type: string
                    nullable: true
                  banner_url:
                    type: string
                    nullable: true
        '404':
          description: Movie not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    put:
      summary: Update a movie
      tags:
        - Movies
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Inception Updated
                genre:
                  type: string
                  example: Sci-Fi
                release_year:
                  type: integer
                  example: 2010
                rating:
                  type: number
                  example: 8.8
                director:
                  type: string
                  example: Christopher Nolan
                duration:
                  type: integer
                  example: 148
                description:
                  type: string
                  example: A thief who steals corporate secrets through dream infiltration.
                plan:
                  type: string
                  enum: [basic, gold, platinum]
                  example: platinum
      responses:
        '200':
          description: Movie updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  genre:
                    type: string
                  release_year:
                    type: integer
                  rating:
                    type: number
                  director:
                    type: string
                  duration:
                    type: integer
                  description:
                    type: string
                  plan:
                    type: string
                    enum: [basic, gold, platinum]
                  poster_url:
                    type: string
                    nullable: true
                  banner_url:
                    type: string
                    nullable: true
        '403':
          description: Forbidden (requires supervisor or admin role)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Movie not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '422':
          description: Validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: array
                    items:
                      type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    delete:
      summary: Delete a movie
      tags:
        - Movies
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Movie deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '403':
          description: Forbidden (requires supervisor or admin role)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Movie not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
servers:
  - url: http://localhost:3000
    description: Development server
  - url: https://movie-explorer-rorakshaykat2003-movie.onrender.com
    description: Production server